type Artist {
  id: ID!
  firstName: String!
  secondName: String!
  middleName: String
  birthDate: String
  birthPlace: String
  country: String!
  bands: [Band]
  instruments: String
}

input CreateArtistInput {
  firstName: String!
  secondName: String!
  middleName: String
  birthDate: String
  birthPlace: String
  country: String!
  bands: [CreateBandInput]
  instruments: String
}

input UpdateArtistInput {
  id: ID!
  firstName: String!
  secondName: String!
  middleName: String
  birthDate: String
  birthPlace: String
  country: String!
  bands: [UpdateBandInput]
  instruments: String
}

type Query {
  artists: [Artist]!
  artist(id: ID!): Artist
}

type Mutation {
  createArtist(createArtistInput: CreateArtistInput!): Artist!
  updateArtist(updateArtistInput: UpdateArtistInput!): Artist!
  removeArtist(id: ID!): Boolean
}
